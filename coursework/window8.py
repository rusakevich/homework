from PyQt5 import QtWidgets, QtCore, Qt
from base import *
from __init__ import Params, message_warning, message_info


class Window8(QtWidgets.QWidget, Params):
    def __init__(self,parent=None):
        super().__init__(parent, QtCore.Qt.Window)
        self.setWindowModality(QtCore.Qt.WindowModal)
        self.tunning()
    def tunning(self):
        self.setGeometry(300, 300, 300, 300)
        self.setWindowTitle('Внесите данные об отпуске')
        self.label_select = QtWidgets.QLabel('Сотрудник')
        self.label_surname = QtWidgets.QLabel('Фамилия')
        self.label_name = QtWidgets.QLabel('Имя')
        self.label_patronymic = QtWidgets.QLabel('Отчество')
        self.label_age = QtWidgets.QLabel('Возраст')
        self.label_post = QtWidgets.QLabel('Должность')
        self.label_surname_ident = QtWidgets.QLabel()
        self.label_surname_ident.setStyleSheet('font-size: 10pt')
        self.label_name_ident = QtWidgets.QLabel()
        self.label_name_ident.setStyleSheet('font-size: 10pt')
        self.label_patronymic_ident = QtWidgets.QLabel()
        self.label_patronymic_ident.setStyleSheet('font-size: 10pt')
        self.label_age_ident = QtWidgets.QLabel()
        self.label_age_ident.setStyleSheet('font-size: 10pt')
        self.label_post_ident = QtWidgets.QLabel()
        self.label_post_ident.setStyleSheet('font-size: 10pt')
        self.label_caption = QtWidgets.QLabel('Введите данные отпуска')
        self.label_caption.setStyleSheet('font-size: 12pt')
        self.label_date = QtWidgets.QLabel('Задайте даты')
        self.label_date.setStyleSheet('font-size: 10pt')
        self.label_kind = QtWidgets.QLabel('Задайте вид')
        self.label_kind.setStyleSheet('font-size: 10pt')
        self.line_date_begin = QtWidgets.QDateEdit()
        self.line_date_begin.setStyleSheet('font-size: 10pt')
        self.line_date_begin.setToolTip('Выберите дату начала отпуска')
        self.line_date_end = QtWidgets.QDateEdit()
        self.line_date_end.setStyleSheet('font-size: 10pt')
        self.line_date_end.setToolTip('Выберите дату окончания отпуска')
        self.line_kind = Qt.QComboBox()
        self.line_kind.addItems(['Ежегодный оплачиваемый отпуск','Отпуск без сохранения з/п', 'Декретный отпуск', 'Учебный отпуск'])
        self.line_kind.setStyleSheet('font-size: 10pt')
        self.line_kind.setToolTip('Выберите вид отпуска')
        self.box_select = QtWidgets.QComboBox()                  
        self.box_select.addItems(self.box())
        self.box_select.setToolTip('Выберите сотрудника')
        self.btnExit = QtWidgets.QPushButton('Закрыть')
        self.btnGet = QtWidgets.QPushButton('Добавить')
        self.btnGetExit = QtWidgets.QPushButton('Добавить и закрыть')
        self.btnExit.setToolTip('Закрыть')
        self.btnGetExit.setToolTip('Добавить данные отпуска и закрыть')
        self.btnGet.setToolTip('Добавить данные отпуска')
        self.gbox = QtWidgets.QGridLayout()
        self.gbox.addWidget(self.label_select,0,0)
        self.gbox.addWidget(self.label_surname,1,0)
        self.gbox.addWidget(self.label_name,2,0)
        self.gbox.addWidget(self.label_patronymic,3,0)
        self.gbox.addWidget(self.label_age,4,0)
        self.gbox.addWidget(self.label_post,5,0)
        self.gbox.addWidget(self.box_select,0,1,1,2)
        self.gbox.addWidget(self.label_surname_ident,1,1,1,2)
        self.gbox.addWidget(self.label_name_ident,2,1,1,2)
        self.gbox.addWidget(self.label_patronymic_ident,3,1,1,2)
        self.gbox.addWidget(self.label_age_ident,4,1,1,2)
        self.gbox.addWidget(self.label_post_ident,5,1,1,2)
        self.gbox.addWidget(self.label_caption,6,1,1,3)
        self.gbox.addWidget(self.label_date,7,0)
        self.gbox.addWidget(self.label_kind,8,0)
        self.gbox.addWidget(self.line_date_begin,7,1)
        self.gbox.addWidget(self.line_date_end,7,2)
        self.gbox.addWidget(self.line_kind,8,1,1,2)
        self.gbox.addWidget(self.btnGet,9,0,1,3)
        self.gbox.addWidget(self.btnGetExit,10,0,1,2)
        self.gbox.addWidget(self.btnExit,10,2,1,1)
        self.setLayout(self.gbox)
        self.findchange()
        self.box_select.currentTextChanged.connect(self.findchange)
        self.btnExit.clicked.connect(self.close)
        self.btnGetExit.clicked.connect(self.saveexit)
        self.btnGet.clicked.connect(self.saveall)
    def save(self):
        with db_session:
            self.key2 = self.return_key()
            Employee.get(key=self.key2).date_start_vacation = self.line_date_begin.text()
            Employee.get(key=self.key2).date_finish_vacation = self.line_date_end.text()
            Employee.get(key=self.key2).kind_vacation = self.line_kind.currentText()
            message_info(self, 'Данные отпуска добавлены')              
    def saveall(self):
        message_warning(self, 'Дата начала отпуска не может быть больше даты окончания отпуска') if self.line_date_begin.date() > self.line_date_end.date() else self.save()
    def saveexit(self):
        message_warning(self, 'Дата начала отпуска не может быть больше даты окончания отпуска') if self.line_date_begin.date() > self.line_date_end.date() else (self.save(), self.close())
        

        
